# Enable SSH and I2C in raspbi-config before running playbook
# ansible-playbook -v -i ~/ansible/hosts /playbooks/setup-alexa-pi-vending.yml
---
- hosts: alexa-pi-vending
  gather_facts: yes
  vars_prompt:

    - name: amazon_product_id
      prompt: "please enter an Amazon ProductID for your new device:"
      private: no
    - name: amazon_client_id
      prompt: "please enter an Amazon ClientID for your new device:"
      private: no
    - name: amazon_client_secret
      prompt: "please enter an Amazon ClientSecret for your new device:"
      private: no

  vars:

    boot_config_options:

      # Set the GPU memory split value.
      - regexp: "^#?gpu_mem_1024"
        line: "gpu_mem_1024=16"

      - regexp: "^#?dtparam=i2c_arm"
        line: "dtparam=i2c_arm=on"

      - regexp: "^#?dtparam=spi"
        line: "dtparam=spi=on"

      - regexp: "^#?dtparam=audio"
        line: "dtparam=audio=on"

    alexa_install_options:

      - regexp: "^#?ProductID="
        line: "ProductID={{ amazon_product_id }}"

      - regexp: "^#?ClientID="
        line: "ClientID={{ amazon_client_id }}"

      - regexp: "^#?ClientSecret="
        line: "ClientSecret={{ amazon_client_secret }}"

  tasks:

    # Run apt-get update and apt-get upgrade 
    - include_tasks: ../tasks/update.yml
      tags: update

    - name: Configure option values in /boot/config.txt file.
      become: yes
      lineinfile:
        dest: /boot/config.txt
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertafter: EOF
        state: present
      with_items: "{{ boot_config_options }}"

    - name: Install dependancies from apt
      become: yes
      apt: name={{item}} state=installed
      with_items:
        - git-core
        - build-essential
        - python-dev
        - scons
        - swig
        - python-pip
        - python-smbus

    - name: Get LED Library from github
      git:
        repo: https://github.com/jgarff/rpi_ws281x.git
        dest: /home/pi/rpi_ws281x

    - name: Run scons command to compile library
      become: yes
      command: scons 
      args:
        chdir: /home/pi/rpi_ws281x

    - name: Run LED Library setup
      become: yes
      command: python setup.py install 
      args:
        chdir: /home/pi/rpi_ws281x/python

    - name: Get Adafruit Nokia LCD Library from github
      git:
        repo: https://github.com/adafruit/Adafruit_Nokia_LCD.git
        dest: /home/pi/Adafruit_Nokia_LCD

    - name: Install the python-imaging package for the Nokia LCD
      become: yes
      apt:
        name: python-imaging
        state: present

    - name: Get Adafruit GPIO Library from github
      git:
        repo: https://github.com/adafruit/Adafruit_Python_GPIO.git
        dest: /home/pi/Adafruit_Python_GPIO

    - name:  Run Adafruit GPIO setup
      become: yes
      command: python setup.py install 
      args:
        chdir: /home/pi/Adafruit_Python_GPIO  

    - name:  Run Nokia LCD setup
      become: yes
      command: python setup.py install 
      args:
        chdir: /home/pi/Adafruit_Nokia_LCD

    - name: Get Adafruit Python Servo Library from github
      git:
        repo: https://github.com/adafruit/Adafruit_Python_PCA9685.git
        dest: /home/pi/Adafruit_Python_PCA9685

    - name: Install Adafruit Python Servo Library
      become: yes
      command: python /home/pi/Adafruit_Python_PCA9685/setup.py install
      args:
        chdir: /home/pi/Adafruit_Python_PCA9685

    - name: Add the test script to crontab
      become: yes
      cron:
        special_time: reboot
        job: /usr/bin/python /home/pi/vendpi/vend.py
      
    # Alexa setup info https://github.com/alexa/alexa-avs-sample-app/wiki/Raspberry-Pi
    - name: Get Amazon Alexa Setup Script from github
      git:
        repo: https://github.com/alexa/alexa-avs-sample-app.git
        dest: /home/pi/alexa-avs-sample-app
        force: yes

    - name: Configure option values in /home/pi/alexa-avs-sample-app/automated_install.sh file.
      become: yes
      lineinfile:
        dest: /home/pi/alexa-avs-sample-app/automated_install.sh
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        insertafter: EOF
        state: present
      with_items: "{{ alexa_install_options }}"